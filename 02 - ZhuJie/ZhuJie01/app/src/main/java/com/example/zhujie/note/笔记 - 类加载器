类加载器的作用
    类加载器的作用：将class文件字节码内容加载到内存当中，并将这些静态数据转换成方法区
    的运行时数据结构，然后在堆中生成一个代表这个类的java.lang.Class对象，作为方法区
    中类数据的访问入口。

    类缓存：标准的JavaSE类加载器可以按要求查找类，但一旦某个类加载到类加载器中，它将
    维持加载（也就是缓存）一段时间。不过JVM的垃圾回收机制可以回收这些Class对象。
    （可达性法则）

    源文件（*.java） -> Java编译器 -> 字节码（*.class文件）
        -> 类加载器 -> 字节码校验器 -> 解释器-> 操作系统平台

    类加载器的作用是用来把类(class)装载进内存的。
    JVM规范定义了如下类型的类的加载器。

    1） 引导类加载器：用C++编写的，是JVM自带的类加载器，负责Java平台核心库（rt.jar），
        用来装载核心类库。该加载器无法直接获取。

    2） 扩展类加载器：负责jre/lib/ext目录下的jar包或 -D java.ext.dirs 指定目录下的
        jar包装入工作库

    3） 系统类加载器：负责java -classpath 或者 -D java.class.path所指的目录下的类
        与jar包装入工作，是最常用的加载器。

    4） 自定义的类加载器

      -> 自底向上检查类是否已经加载
    自定义类加载器 -> System(Application) ClassLoader -> Extension ClassLoader
        -> Bootstap ClassLoader
            <- 自顶向下尝试加载类